<mvc:View controllerName="podprojekt.controller.Quittierung"
    xmlns:mvc="sap.ui.core.mvc" 
    xmlns:core="sap.ui.core" 
    xmlns="sap.m"
    xmlns:form="sap.ui.layout.form" 
    xmlns:upload="sap.m.upload" 
    xmlns:plugins="sap.m.plugins"
    displayBlock="true">
    <Page id="confirmationPage" title="{i18n>confirmationTitle}&#13;{i18n>buildNo}">
        <customHeader>
            <Bar>
                <contentLeft>
                    <Button id="navBackToStopInformationPageId" press="onNavToStopInformation" icon="sap-icon://nav-back"/>
                </contentLeft>
                <contentMiddle>
                    <Title id="confirmationTitleId" text="{i18n>confirmationTitle}&#13;{i18n>buildNo}"/>
                </contentMiddle>
                <contentRight>
                </contentRight>
            </Bar>
        </customHeader>

        <content>
            <form:SimpleForm id="currentTourInfoForm">
                <form:content>
                    <Text id="driverInfo" text="{TourAndStopModel>/customerInformation/driverName}&#10;"/>
                    <Title id="currentTourInfo" text="{i18n>currentTour}&#13;{TourAndStopModel>/oCurrentTour/routeCaption}" wrapping="true" level="H2"/>
                        <HBox justifyContent="SpaceAround">
                            <Label text="{i18n>adress}"/>
                            <Text text="{TourAndStopModel>/oCurrentStop/addressName1}&#13;&#10;{TourAndStopModel>/oCurrentStop/street}{TourAndStopModel>/oCurrentStop/streetNumber}&#13;&#10;{TourAndStopModel>/oCurrentStop/country} {TourAndStopModel>/oCurrentStop/zipCode} {TourAndStopModel>/oCurrentStop/city}" width="100%"/>
                        </HBox>
                </form:content>
            </form:SimpleForm>

            <form:SimpleForm id="DelivererInputForm">
                <form:content>
                    <Label id="recipientFoundControl" text="{i18n>recipientFound}"/>
                    <Switch id="recipientFoundSwitch" type="AcceptReject" state="{ConfigModel>/generalSettings/recipientFound}" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/> <!--text is prohibited: https://experience.sap.com/fiori-design-web/switch/-->

                    <Label id="recipientName" labelFor="recipientNameInp" text="{i18n>recipientName}" visible="{= ${ConfigModel>/generalSettings/recipientFound} }" required="true"/>
                    <Input id="recipientNameInp" valueLiveUpdate="true" liveChange="onCustomerNameInputLiveChange" change="onCustomerNameInputChange" showClearIcon="true" editable="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }" 
                        visible="{= ${ConfigModel>/generalSettings/recipientFound} === false ? false:
                            ${ConfigModel>/generalSettings/bViewerMode} === false ? true : false}" 
                        value="{
                            path: 'TourAndStopModel>/aQuittierungInformation/sName',
                            type: 'sap.ui.model.type.String',
                            constraints: {
                                minLength: 2,
                                maxLength: 15,
                                search: '^[a-zA-ZäöüßÄÖÜ\\-]{2,15}$'
                                },
                                formatOptions: {showMeasure: false}}"/>
                    <Input id="recipientNameInpViewerMode" visible="{= ${ConfigModel>/generalSettings/bViewerMode}}" value="{TourAndStopModel>/oCurrentStop/signedCustomerName}" editable="false" ></Input>

                    <Label text="{i18n>showDeliveryItems}"/>
                    <ToggleButton id="deliveryItemsToggleButton" icon="{=${ConfigModel>/generalSettings/bDeliveryItemsVisible} === true ? 'sap-icon://less' : 'sap-icon://add'}" text="{i18n>deliveryItems}" pressed="{ConfigModel>/generalSettings/bDeliveryItemsVisible}"/>
                    <Label ></Label>
                    <List  id="deliveryNoteList" includeItemInSelection="true" items="{TourAndStopModel>/oCurrentStop/orders/0/aDeliveryNotes}" visible="{= ${ConfigModel>/generalSettings/bDeliveryItemsVisible}}" noDataText="{i18n>noDeliveryNotes}"> 
                       <headerToolbar>
                            <Toolbar>
                                <Title text="{i18n>deliveryItems}"/>
                            </Toolbar>
                        </headerToolbar>
                        <items>
                            <StandardListItem
                                title="{TourAndStopModel>shipmentNumber}"
                                icon="{= ${TourAndStopModel>/oCurrentStop/orders/0/aDeliveryNotes/0/aUnprocessedNumberedDispatchUnits}.length > 0 ? 'sap-icon://high-priority' : 'sap-icon://approvals'}"
                                info="{= ${TourAndStopModel>oCurrentStop/orders/0/loadingUnits/0/isReturning} === true ? ${i18n>returning} : ${i18n>unloading}}"
                                infoState="{= ${TourAndStopModel>/oCurrentStop/orders/0/aDeliveryNotes/0/aUnprocessedNumberedDispatchUnits}.length > 0 ? 'Error' : 'Success'}"
                                type="Navigation"
                                press="onDeliveryNotePressed"/>
                        </items>
                    </List>
                    <MessageStrip id="messageStripDeliveryItemList" 
                        visible="{= ${TourAndStopModel>/oCurrentStop/orders/0/aDeliveryNotes/0/aUnprocessedNumberedDispatchUnits}.length > 0 ? true : false}" 
                        text="{i18n>notALlNvesProcessed}" 
                        type="{= ${TourAndStopModel>/oCurrentStop/orders/0/aDeliveryNotes/0/aUnprocessedNumberedDispatchUnits}.length > 0 ? 'Error' : 'None'}" />

                    <Label id="complaints" text="{i18n>complaints}"/>
                        <!--Switch ohne Anzeigemodus-->
                    <Switch id="complaintsSwitch" type="AcceptReject" state="{ConfigModel>/generalSettings/complaintsSwitch}" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }" visible="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/> <!--text is prohibited: https://experience.sap.com/fiori-design-web/switch/-->
                        <!--Switch mit Anzeigemodus-->
                    <Switch id="complaintsSwitchViewerMode" type="AcceptReject" state="{= ${TourAndStopModel>/oCurrentStop/aComplaints}.length > 0 ? true : false }" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }" visible="{ConfigModel>/generalSettings/bViewerMode}"/>
                    <Label />

                    <!--Liste mit Beanstandungen ohne Anzeigemodus-->
                    <List id="complaintsList" mode="MultiSelect" includeItemInSelection="true" items="{ComplaintsModel>/results}" visible="{= ${ConfigModel>/generalSettings/complaintsSwitch}}" >
                        <items>
                            <StandardListItem title="{ComplaintsModel>complaintText}" selected="{ComplaintsModel>value}"/>
                        </items>
                        <headerToolbar>
                            <OverflowToolbar>
                                <Title text="{i18n>complain}" level="H2" />
                            </OverflowToolbar>
                        </headerToolbar>
                    </List>

                    <!--Liste mit Beanstandungen mit Anzeigemodus-->
                    <List id="complaintsListViewerMode" mode="None" includeItemInSelection="true" items="{TourAndStopModel>/oCurrentStop/aComplaints}" visible="{ConfigModel>/generalSettings/bViewerMode}"> <!--mode="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? 'MultiSelect' : 'None'}"-->
                        <items>
                            <StandardListItem title="{TourAndStopModel>complaintText}" selected="{TourAndStopModel>value}"/>
                        </items>
                        <headerToolbar>
                            <OverflowToolbar>
                                <Title text="{i18n>complaints}" level="H2" />
                            </OverflowToolbar>
                        </headerToolbar>
                    </List>

                    <Label id="remarks" text="{i18n>remarks}" />
                    <Switch id="remarksSwitch" type="AcceptReject" enabled="{= !${ConfigModel>/generalSettings/bViewerMode} }" state="{ConfigModel>/generalSettings/remarksSwitch}" visible="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/> <!--text is prohibited: https://experience.sap.com/fiori-design-web/switch/-->
                    <Switch id="remarksSwitchViewerMode" type="AcceptReject" enabled="false" state="{= ${TourAndStopModel>/oCurrentStop/sDeliveryRemarks} === '' ? false : true }" visible="{ConfigModel>/generalSettings/bViewerMode}"/> 
                    <Label />

                        <!--Text-feld fuer remakrs ohne Anzeigemodus-->
                    <TextArea id="idTextarea" 
                        value="{TourAndStopModel>/aQuittierungInformation/sRemarks}" 
                        visible="{= ${ConfigModel>/generalSettings/remarksSwitch} === true ? (${ConfigModel>/generalSettings/bViewerMode} === true ? false : true) : false }"/>
                        <!--Text-feld fuer remakrs im Anzeigemodus-->
                    <TextArea id="idTextareaViewerMode" value="{TourAndStopModel>/oCurrentStop/sDeliveryRemarks}" 
                        visible="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? true : false }"
                        editable="false"/>

                    <Label id="photoItems" text="{i18n>showPhotos}"/>
                    <ToggleButton id="photoItemsToggleButton" icon="{=${ConfigModel>/generalSettings/bPhotoListVisible} === true ? 'sap-icon://less' : 'sap-icon://add'}" text="{i18n>photoList}" pressed="{ConfigModel>/generalSettings/bPhotoListVisible}"/>
                    <Label/>
                    <!--UploadSet sei veraltet (Seit kurzem, muss erneuert werden)-->
                
                <!--
                    <upload:UploadSet id="photoItemsList" uploadEnabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }" visible="{ConfigModel>/generalSettings/bPhotoListVisible}" fileTypes="png, image/*" instantUpload="false" 
                        items="{path:'PhotoManagementModel>/photos/allPhotos', 
                            sorter: {path:'photoType', descending: false, 
                                group: true}}"> 
                        <upload:toolbar>
                            <OverflowToolbar >
                                <ToolbarSpacer/>
                                <Button id="uploadSelectedButton" text="Upload selected" press="onUploadSelectedButton" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/>
                                <Button id="downloadSelectedButton" text="Download selected" press="onDownloadSelectedButton" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/>
                                <upload:UploadSetToolbarPlaceholder  />
                            </OverflowToolbar>
                        </upload:toolbar>
                        <upload:items >
                            <upload:UploadSetItem
                                    fileName="{PhotoManagementModel>fileName}"
                                    url="{PhotoManagementModel>url}"
                                    mediaType="{mediaType}"
                                    thumbnailUrl="{PhotoManagementModel>src}"
                                    uploadState="{uploadState}">
                                <upload:markers>
                                    <ObjectMarker
                                            type="{type}"
                                            visibility="TextOnly"/>
                                </upload:markers>
                                <upload:statuses>
                                    <ObjectStatus
                                            title="{PhotoManagementModel>photoType}"
                                            text="{text}"
                                            state="{state}"
                                            icon="{icon}"
                                            active="{active}"/>
                                </upload:statuses>
                            </upload:UploadSetItem>
                        </upload:items>
                    </upload:UploadSet>
                -->
                    
                    <Label/>
                
                    <Table 
                    id="table-uploadSet"
                    sticky="ColumnHeaders,HeaderToolbar"
                    width="auto"
                    mode="SingleSelectLeft"
                    fixedLayout="false"
                    inset="true"
                    autoPopinMode="true"
                    hiddenInPopin="None"
                    items="{path: 'PhotoManagementModel>/photos/allPhotos', templateShareable: false}"
                    visible="{ConfigModel>/generalSettings/bPhotoListVisible}">
                        <headerToolbar>
                            <OverflowToolbar>
                                <Title text="Aufnahmen ({= ${PhotoManagementModel>/photos/allPhotos}.length})" level="H2"/>

                            <!--
                                <SearchField id="SearchField_Id" width="20%" liveChange="onSearch">
                                    <layoutData>
                                        <OverflowToolbarLayoutData priority="NeverOverflow"/>
                                    </layoutData>
                                </SearchField>
                            -->

                                <ToolbarSpacer />
                                <upload:ActionsPlaceholder id="uploadButton" placeholderFor="UploadButtonPlaceholder" />
                                <Button id="downloadSelectedButton_test" text="Download" enabled="false" press="onDownloadFiles"/>

                            </OverflowToolbar>
                        </headerToolbar>


                        <dependents>
                            <plugins.UploadSetwithTable
                                uploadUrl="/uploadFiles"
                                multiple="true"
                                beforeUploadStarts="onBeforeUploadStarts"
                                itemRenamed="onDocumentRenamedSuccess"
                                uploadCompleted="onUploadCompleted"
                                onActivated="onPluginActivated"
                                cloudFilePickerEnabled="true"
                                actions="uploadButton">
                                <rowConfiguration>
                                    <upload.UploadItemConfiguration
                                        fileNamePath="fileName"
                                        mediaTypePath="mediaType"
                                        urlPath="url"
                                        previewablePath="previewable"
                                        fileSizePath="fileSize"
                                    />
                                </rowConfiguration>
                            </plugins.UploadSetwithTable>
                        </dependents>


                        <columns>
                            <Column id="fileName" importance="High">
                                <header>
                                    <Label text="File Name" />
                                </header>
                            </Column>
                            <!--
                            <Column id="dateAndTime">
                                <header>
                                    <Label text="Date and Time" />
                                </header>
                            </Column>
                            -->
                            <Column id="status">
                                <header>
                                    <Label text="Status" />
                                </header>
                            </Column>
                            <Column id="fileSize">
                                <header>
                                    <Label text="File Size" />
                                </header>
                            </Column>
                            <Column id="lastModified">
                                <header>
                                    <Label text="Last Modified" />
                                </header>
                            </Column>
                            <Column id="actionButton" importance="High">
                                <header>
                                    <Label text="Actions" />
                                </header>
                            </Column>
                        </columns>

                        <items >
                            <ColumnListItem>
                                <cells>
                                    <HBox>
                                        <Image src="{PhotoManagementModel>src}" class="sapMUSTItemImage sapMUSTItemIcon" visible="{= ${PhotoManagementModel>src} !== undefined}"/>
                                        <VBox>
                                            <Link text="{PhotoManagementModel>fileName}" press="onOpenFilePreview"/>
                                            <Text text="{PhotoManagementModel>photoType}" />
                                        </VBox>
                                    </HBox>
                                    <Text text="{PhotoManagementModel>uploadState}" />
                                    <Text text="TestFileSize"/>
                                    <Text text="TestLastModified" />
                                    <HBox>
                                        <Button icon="sap-icon://edit" press="onEditFile" type="Transparent" />
                                        <Button icon="sap-icon://delete" press="onRemoveFilePressed" type="Transparent" />
                                    </HBox>
                                    
                                </cells>
                            </ColumnListItem>
                        </items>
                    </Table>
                    
                    <Label />

                    <HBox justifyContent="SpaceAround">
                        <Button id="addPhotoBtn" icon="sap-icon://add-photo" text="{i18n>takePhoto}" press="onOpenPhotoDialog" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/> 
                        <Select id="photoTypeSelect" enabled="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }" items="{
                                path:'PhotoManagementModel>/photos/types'}" change="onPhotoTypesSelectChange">
                                <core:ListItem text="{PhotoManagementModel>photoTyp}" key="{PhotoManagementModel>photoTyp}"/>
                        </Select>
                    </HBox>

                    <Label id="loadingDevices" text="{i18n>loadingDevices}"/>
                    <ToggleButton id="loadingDevicesToggleButton" text="{i18n>loadingDevices}" pressed="{ConfigModel>/generalSettings/bLoadingDevicesVisible}"/>
                    <Label/>
                    <Table id="loadingDevicesTable" items="{LoadingDeviceModel>/items}" visible="{ConfigModel>/generalSettings/bLoadingDevicesVisible}">
                        <items>
                            <ColumnListItem>
                                <cells>
                                    <Text text="{LoadingDeviceModel>lodingDeviceTypeCaption}"/>
                                    <Text text="{LoadingDeviceModel>amount}"/>
                                    <Input type="Number" value="" editable="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/>
                                    <Input type="Number" value="" editable="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : true }"/>
                                </cells>
                            </ColumnListItem>
                        </items>
                        <columns>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesType}"/>
                                </header>
                            </Column>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesStock}"/>
                                </header>
                            </Column>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesUnload}"/>
                                </header>
                            </Column>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesLoad}"/>
                                </header>
                            </Column>
                        </columns>
                    </Table>
                    <Label/>
                    
                </form:content>
            </form:SimpleForm>
        </content>

        <footer>
            <Bar>
                <contentLeft>
                </contentLeft>
                <contentMiddle>
                </contentMiddle>
                <contentRight>
                    <Button id="viewerModeUnterschriftButton" icon="sap-icon://open-command-field" text="{i18n>viewStoppStats}" press="onViewerModeUnterschrift" type="Neutral"
                        visible="{ConfigModel>/generalSettings/bViewerMode}"/>
                    <Button id="signBtn" icon="sap-icon://signature" text="{i18n>sign}" press="checkSignConditions" type="Accept" 
                        visible="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : 
                        ${ConfigModel>/generalSettings/recipientFound} === true ? true: false}" />
                    <Button id="btnAbschliessen" icon="sap-icon://decline" text="{i18n>notEncountered}" press="onRecipientNotFound" type="Reject" 
                        visible="{= ${ConfigModel>/generalSettings/bViewerMode} === true ? false : 
                        ${ConfigModel>/generalSettings/recipientFound} === true ? false: true}" />
                </contentRight>
            </Bar>
        </footer>
    </Page>
</mvc:View>
