<mvc:View controllerName="podprojekt.controller.Quittierung"
    xmlns:mvc="sap.ui.core.mvc" 
    xmlns:core="sap.ui.core" 
    xmlns="sap.m"
    xmlns:form="sap.ui.layout.form" 
    xmlns:upload="sap.m.upload" displayBlock="true">
    <Page id="confirmationPage">
        <customHeader>
            <Bar>
                <contentLeft>
                </contentLeft>
                <contentMiddle>
                    <Label text="{i18n>confirmationTitle}"/>
                </contentMiddle>
                <contentRight>
                </contentRight>
            </Bar>
        </customHeader>

        <content>
            <form:SimpleForm id="currentTourInfoForm">
                <form:content>
                    <Text id="driverInfo" text="{i18n>driver}&#10;"/>
                    <Title id="currentTourInfo" text="{i18n>currentTour}&#13;{TourStartFragmentModel>/tour/routeCaption}" wrapping="true" level="H2"/>
                        <HBox justifyContent="SpaceAround">
                            <Label text="{i18n>adress}"/>
                            <Text text="{StopInformationModel>/tour/addressName1}&#13;&#10;{StopInformationModel>/tour/street}{StopInformationModel>/tour/streetNumber}&#13;&#10;{StopInformationModel>/tour/country} {StopInformationModel>/tour/zipCode} {StopInformationModel>/tour/city}" width="100%"/>
                        </HBox>
                </form:content>
            </form:SimpleForm>

            <form:SimpleForm id="DelivererInputForm">
                <form:content>
                    <Label id="recipientFoundControl" text="{i18n>recipientFound}"/>
                    <Switch id="recipientFoundSwitch" type="AcceptReject" customTextOff="{i18n>no}" customTextOn="{i18n>yes}" state="{settings>/recipientFound}"/>

                    <Label id="recipientName" text="{i18n>recipientName}" visible="{= ${settings>/recipientFound} }"/>
                    <Input id="recipientNameInp" value="{RecipientNameModel>/recipient/name}" visible="{= ${settings>/recipientFound} }"/>

                    <Label text="{i18n>showDeliveryItems}"/>
                    <ToggleButton id="deliveryItemsToggleButton" icon="{=${settings>/deliveryItemsVisible} === true ? 'sap-icon://less' : 'sap-icon://add'}" text="{i18n>deliveryItems}" press="onToggleListVisibility" pressed="{settings>/deliveryItemsVisible}"></ToggleButton>
                    <Label ></Label>
                    <List  id="deliveryNoteList" mode="None" includeItemInSelection="true" items="{DeliveryNoteModel>/results}" visible="{= ${settings>/deliveryItemsVisible}}" noDataText="{i18n>noDeliveryNotes}"> 
                        <items>
                            <StandardListItem
                                title="{DeliveryNoteModel>ProductId}"
                                type="Navigation"
                                press="onDeliveryNotePressed"/>
                        </items>
                        <headerToolbar>
                            <OverflowToolbar>
                                <Title text="{i18n>deliveryItems}"/>
                            </OverflowToolbar>
                        </headerToolbar>
                    </List>

                    <Label id="complaints" text="{i18n>complaints}"/>
                    <Switch id="complaintsSwitch" customTextOff="{i18n>no}" customTextOn="{i18n>yes}" state="{settings>/complaintsSwitch}"/>
                    <List id="complaintsList" mode="MultiSelect" includeItemInSelection="true" items="{ComplaintsModel>/results}" visible="{= ${settings>/complaintsSwitch}}">
                        <items>
                            <StandardListItem
                                title="{ComplaintsModel>complaintText}"/>
                        </items>
                        <headerToolbar>
                            <OverflowToolbar>
                                <Title text="Products" level="H2" />
                            </OverflowToolbar>
                        </headerToolbar>
                    </List>

                    <Label id="remarks" text="{i18n>remarks}"/>
                    <Switch id="remarksSwitch" state="{settings>/remarksSwitch}" customTextOff="{i18n>no}" customTextOn="{i18n>yes}"/>
                    <TextArea id="idTextarea" visible="{settings>/remarksSwitch}"/>

                    <Label id="photoItems" text="{i18n>showPhotos}"/>
                    <ToggleButton id="photoItemsToggleButton" icon="{=${settings>/photoListVisible} === true ? 'sap-icon://less' : 'sap-icon://add'}" text="{i18n>photoList}" pressed="{settings>/photoListVisible}"></ToggleButton>
                    <Label/>
                    <upload:UploadSet id="photoItemsList" visible="{settings>/photoListVisible}" fileTypes="png, image/*" instantUpload="false"
                        items="{path:'PhotoModel>/photos', 
                            sorter: {path:'photoType', descending: false, 
                                group: true},
                                    groupHeaderFactory:'.formatter.getPhotoTypeHeader'}"> 
                        <upload:toolbar>
                            <OverflowToolbar >
                                <ToolbarSpacer/>
                                <Button
                                        id="uploadSelectedButton"
                                        text="Upload selected"
                                        press="onUploadSelectedButton"/>
                                <Button
                                        id="downloadSelectedButton"
                                        text="Download selected"
                                        press="onDownloadSelectedButton"/>
                                <upload:UploadSetToolbarPlaceholder />
                            </OverflowToolbar>
                        </upload:toolbar>
                        <upload:items >
                            <upload:UploadSetItem
                                    fileName="{PhotoModel>fileName}"
                                    url="{PhotoModel>url}"
                                    mediaType="{mediaType}"
                                    thumbnailUrl="{PhotoModel>src}"
                                    uploadState="{uploadState}">
                                <upload:markers>
                                    <ObjectMarker
                                            type="{type}"
                                            visibility="TextOnly"/>
                                </upload:markers>
                                <upload:statuses>
                                    <ObjectStatus
                                            title="{PhotoModel>photoType}"
                                            text="{text}"
                                            state="{state}"
                                            icon="{icon}"
                                            active="{active}"/>
                                </upload:statuses>
                            </upload:UploadSetItem>
                        </upload:items>
                    </upload:UploadSet>
                    <Label />

                    <HBox justifyContent="SpaceAround">
                        <Button id="addPhotoBtn" icon="sap-icon://add-photo" text="{i18n>takePhoto}" press="onOpenPhotoDialog" /> <!--press="onFotoabfrageDialogOpen"-->
                        <Select id="photoTypeSelect" items="{
                                path:'PhotoTypeModel>/photoTypes'}" change="onPhotoTypesSelectChange">
                                <core:ListItem text="{PhotoTypeModel>photoTyp}" key="{PhotoTypeModel>photoTyp}"/>
                        </Select>
                    </HBox>

                    <Label id="loadingDevices" text="{i18n>loadingDevices}"/>
                    <ToggleButton id="loadingDevicesToggleButton" text="{i18n>loadingDevices}" pressed="{settings>/loadingDevicesVisible}"></ToggleButton>
                    <Label/>
                    <Table id="loadingDevicesTable" items="{LoadingDeviceModel>/items}" visible="{settings>/loadingDevicesVisible}">
                        <items>
                            <ColumnListItem>
                                <cells>
                                    <Text text="{LoadingDeviceModel>Typ}"/>
                                    <Text text="{LoadingDeviceModel>Bestand}"/>
                                    <Input/>
                                    <Input/>
                                </cells>
                            </ColumnListItem>
                        </items>
                        <columns>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesType}"/>
                                </header>
                            </Column>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesStock}"/>
                                </header>
                            </Column>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesUnload}"/>
                                </header>
                            </Column>
                            <Column>
                                <header>
                                    <Text text="{i18n>loadingDevicesLoad}"/>
                                </header>
                            </Column>
                        </columns>
                    </Table>
                    <Label/>
                    <Button id="signBtn" icon="sap-icon://signature" text="{i18n>sign}" press="checkSignConditions" visible="{= ${settings>/recipientFound} === true ? true : false}" type="Accept"/>
                    <Button id="btnAbschliessen" icon="sap-icon://decline" text="{i18n>notEncountered}" press="onRecipientNotFound" visible="{= ${settings>/recipientFound} === true ? false : true}" type="Reject"/>
                </form:content>
            </form:SimpleForm>
        </content>
    </Page>
</mvc:View>
